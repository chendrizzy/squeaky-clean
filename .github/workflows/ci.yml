name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }} / Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [16, 18, 20]
        exclude:
          # Skip some combinations to save CI time
          - os: windows-latest
            node: 16
          - os: macos-latest
            node: 16
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
        
      - name: Build project
        run: npm run build
      
      - name: Run unit tests
        run: npm test
      
      - name: Run E2E tests
        run: npm run test:e2e || echo "E2E tests not yet configured"
      
      - name: Run smoke test (dry-run)
        run: |
          node dist/cli.js clean --all --dry-run
          node dist/cli.js list
          node dist/cli.js sizes
      
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node == '20'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  config-migration-test:
    name: Config Migration Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Test config migration
        run: |
          # Create a legacy config
          mkdir -p test-config
          echo '{"tools":{"npm":{"enabled":true}},"auto":{"enabled":false},"output":{"verbose":true}}' > test-config/legacy.json
          
          # Test doctor command
          node dist/cli.js config doctor --input test-config/legacy.json --output test-config/migrated.json --quiet
          
          # Verify migration created output
          test -f test-config/migrated.json
          
          # Test that new config works
          node dist/cli.js list --config test-config/migrated.json

  release:
    name: Release
    needs: [test, config-migration-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Publish to npm (dry-run)
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}